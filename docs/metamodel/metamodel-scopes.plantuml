@startuml
class Module
class Scope
class ModuleScope
class Unit
class Property
class Expression
class BlockScope

enum ModuleType {
    CLASS
    ENUM
    INTERFACE
    RECORD
}

enum ModifierType {
    PUBLIC
    PROTECTED
    PRIVATE
    STATIC
    FINAL
    OPEN
    SEALED
    ABSTRACT
    DEFAULT
}

Module : # componentName: String
Module : # filePath: String
Module : # fileName: String
Module : # imports: List<String>
Module *-- ModuleScope

Scope <|-- ModuleScope
Scope <|-- Unit
Scope <|-- Property
Scope <|-- BlockScope

ModuleScope : # identifier: Identifier
ModuleScope : # extends: List<String>
ModuleScope : # implements: List<String>
ModuleScope : # members: List<Scope>
ModuleScope : # metadata: Metadata
ModuleScope "1" *-- "*" ModifierType : modifiers >
ModuleScope *-- ModuleType : moduleType >

Unit : # identifier: Identifier
Unit : # parameters: List<Property>
Unit : # modifiers: List<ModifierType>
Unit : # body: BlockScope
Unit : # metadata: Metadata

Property : # identifier: Identifier
Property : # modifiers: List<ModifierType>
Property : # value: Expression?
Property : # getter: Unit?
Property : # setter: Unit?
Property : # metadata : Metadata

BlockScope "1" *-- "*" Expression : expressions >

Expression : # nestedScope: BlockScope
Expression : # metadata: Metadata

@enduml